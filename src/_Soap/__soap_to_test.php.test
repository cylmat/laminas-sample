
$header = new \SoapHeader(\Soap\Manager\ServerManager::$NS, 
    'getMessageWsdl',
    ['string'],
    true);
    
$header2 = new \SoapHeader(\Soap\Manager\ServerManager::$NS, 
    'getMessage',
    ['int','deuxieme'], #PARAMETRES DE LA FUNCTION APPELLEE
    false);

			
	params:
	!!! bien dÃ©finir les methods dans le DOCCOMMENT de la classe du serveur
	

/**
     * @param array
     * @param array
     * @return string
     */
    public function getMessage(array $strNom, array  $essai_deux): string



$headerbody = array('getMessage' => 'TOKENIZED',
            //    'Version' => 'VERSION',
              //  'MerchantID'=>'MERCH_ID',
                  'UserCredentials'=>array('UserID'=>'user_id_blazlblb',
                                         'Password'=>'7v1e6tb3db3y8y'));
//Create Soap Header.       
$header = new \SOAPHeader(\Soap\Manager\ServerManager::$NS, 'getMessage', $headerbody);       

			
			header

---client
//Create Soap Header.
            $header = new \SOAPHeader(\Soap\Manager\ServerManager::$NS, 'Header', array(
               ['Username'=>'u', 'Password'=>'p']
            ), true);   
            

            $header_msg = new \SOAPHeader(\Soap\Manager\ServerManager::$NS, 'getMessage', array(
                'TOKENIZED',
                
            ), true);       

            $client->__setSoapHeaders([$header, $header_msg]); #default namespace. These attributes are: mustUnderstand, actor, and encodingStyle.


---server
/**
     * @param array user credential
     * @return void
     */
    function Header(array $header): void
    {
        
        if ((isset($header[0]->key)) && (isset($header[1]->key))) {
            if (('Username'==$header[0]->key && 'Password'==$header[1]->key)) {
                if (('us'==$header[0]->value && 'p'==$header[1]->value)) {
                    $this->http_auth = true;
                }
            }
        }
    }

			
			
	error


$client = new \SoapClient(
                \Soap\Manager\ServerManager::$URL.'/getwsdl', 
                array(
                    
                    'exceptions' => false
                )
            );

#IN CASE OF 'exceptions' => false
        $return = $client->getMessage(implode(',',$params));
        if (is_soap_fault($return)) {
            echo 'fault';
            //trigger_error("SOAP Fault: (faultcode: {$return->faultcode}, faultstring: {$return->faultstring})", E_USER_ERROR);
        }

--- server
* https://www.w3.org/TR/soap12-part1/#faultcodes
 * SOAPFault VersionMismatch, MustUnderstand, Sender, Receiver

/**
     * @param string name
     * @return string wsdl dates
     */
    public function getMessage(string $strNom): string
    {
        
        if(null===$this->http_auth) 
            throw new \SOAPFault('Sender', 'getmessage() http_auth not valid:', 'actor:jean', 'detail:null', 'name:encode', 'header:nop');


       
        return 'Login 1 dates: ' . (`perl ../perl/test.pl 1`) . $strNom;
    }

			

